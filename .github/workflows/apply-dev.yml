name: 개발 인프라 배포

on:
  push:
    branches: [main]
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  apply-base:
    strategy:
      matrix:
        module: ["network", "codedeploy", "container-registry"]
    name: "Apply base layer"
    if: github.repository == '9U-ReQuest/infra'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: |
          terraform init
          terraform workspace select -or-create dev
      - name: Terraform plan
        run: terraform plan
      - name: Terraform apply
        run: terraform apply -auto-approve
      - name: Generate output
        run: |
          {
            echo "${{ matrix.module }}<<EOF"
            terraform output -json
            echo EOF
          } >> "$GITHUB_OUTPUT"
  apply-applications:
    needs: apply-base
    strategy:
      matrix:
        module: ["gasi"]
    name: "Apply applications"
    if: github.repository == '9U-ReQuest/infra'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: |
          terraform init
          terraform workspace select -or-create dev
      - name: Terraform plan
        run: terraform plan
      - name: Terraform apply
        run: terraform apply -auto-approve
      - name: Generate output
        run: |
          {
            echo "${{ matrix.module }}<<EOF"
            terraform output -json
            echo EOF
          } >> "$GITHUB_OUTPUT"
